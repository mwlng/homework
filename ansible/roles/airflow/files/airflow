#!/bin/bash
#
# airflow      Start/Stop the apache airflow webserver.
#
# chkconfig:   2345 99 10
# description: Apache Airflow webserver
#

### BEGIN INIT INFO
# Provides: airflow
# Required-Start:
# Required-Stop:
# Default-Start: 2345
# Default-Stop: 016
# Short-Description:
# Description: Run Apache Airflow webserver
### END INIT INFO

EXEC_SCRIPT=/usr/local/bin/airflow
CMDNAME=`basename $0`
LOG_DIR=/var/log/airflow
PID_DIR=/var/run
PID_FILE="$PID_DIR"/airflow_webserver.pid
LOG_FILE="$LOG_DIR"/webserver.log
PORT=8080
RUN_USER=airflow

if ! grep "^$RUN_USER:" /etc/passwd > /dev/null
then
  echo "no user : $RUN_USER"
  exit
fi

# Source function library.
. /etc/init.d/functions

test -d $LOG_DIR || mkdir $LOG_DIR; chmod -R 777 $LOG_DIR

RETVAL=0

case "$1" in
    start)
        if [ ! -f "$PID_FILE" ]; then
          echo -n "Starting Airflow WebServer"
          su - $RUN_USER -c "$EXEC_SCRIPT webserver -p $PORT 0<&- &> $LOG_FILE &"
          ps aux | grep "airflow webserver" | grep -v grep | awk '{ print $2 }' > $PID_FILE
          success
        else
          echo -n "Airflow WebServer is already running"
          RETVAL=1
          failure
        fi
        ;;
    stop)
        if [ -f "$PID_FILE" ]; then
          echo -n "Stopping Airflow WebServer"
          test -f $PID_FILE && cat $PID_FILE | xargs kill -s SIGKILL
          ps aux | grep "gunicorn: master \[airflow-webserver\]" | awk '{ print $2 }' | xargs kill -s SIGKILL
          ps aux | grep "gunicorn: worker \[airflow-webserver\]" | awk '{ print $2 }' | xargs kill -s SIGKILL
          rm -f $PID_FILE
          success
        else
          echo -n "Airflow WebServer is not running"
          RETVAL=1
          failure
        fi
        echo
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    status)
        status airflow server
        RETVAL=$?
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload}"
        exit 1
        ;;
esac

exit $RETVAL